.panel-body
  .row
    .col-md-6{'tooltip-placement' => "top", tooltip: t('tooltips.hotel.date_build')}
      %legend
        %label=t("b1_admin.building_year")
      .form-group{"ng-class" => "{'has-error': editedItem.build_date.$invalid && itemForm.$submitted}"}
        .col-sm-12
          = text_field_tag :build_date,"" ,class:"form-control","ng-minlength"=>3, "ng-model"=>"editedItem.build_date"
    .col-md-6{'tooltip-placement' => "top", tooltip: t('tooltips.hotel.date_rebuild')}
      %legend
        %label=t("b1_admin.reconstruction_year")
      .form-group{"ng-class" => "{'has-error': editedItem.rebuild_date.$invalid && itemForm.$submitted}"}
        .col-sm-12
          = text_field_tag :rebuild_date,"" ,class:"form-control","ng-minlength"=>3, "ng-model"=>"editedItem.rebuild_date"
  .row
    .col-md-6{'tooltip-placement' => "top", tooltip: t('tooltips.hotel.check_in')}
      %legend
        %label=t("b1_admin.check_in")
      .form-group{"ng-class" => "{'has-error': editedItem.registration_time_in.$invalid && itemForm.$submitted}"}
        .col-sm-6
          %select.form-control{'id' => 'registration_time_in', 'ng-model' => 'editedItem.registration_time_in'}
            -(0..23).each do |i|
              %option{'value' => "#{i.to_s.rjust(2, '0')}:00"}="#{i.to_s.rjust(2, '0')}:00"
        .col-sm-6
          %select.form-control{'id' => 'registration_time_in_to', 'ng-model' => 'editedItem.registration_time_in_to'}
            -(0..23).each do |i|
              %option{'value' => "#{i.to_s.rjust(2, '0')}:00"}="#{i.to_s.rjust(2, '0')}:00"
    .col-md-6{'tooltip-placement' => "top", tooltip: t('tooltips.hotel.check_out')}
      %legend
        %label=t("b1_admin.check_out")
      .form-group{"ng-class" => "{'has-error': editedItem.registration_time_out.$invalid && itemForm.$submitted}"}
        .col-sm-6
          %select.form-control{'id' => 'registration_time_out', 'ng-model' => 'editedItem.registration_time_out'}
            -(0..23).each do |i|
              %option{'value' => "#{i.to_s.rjust(2, '0')}:00"}="#{i.to_s.rjust(2, '0')}:00"
        .col-sm-6
          %select.form-control{'id' => 'registration_time_out_to', 'ng-model' => 'editedItem.registration_time_out_to'}
            -(0..23).each do |i|
              %option{'value' => "#{i.to_s.rjust(2, '0')}:00"}="#{i.to_s.rjust(2, '0')}:00"
  .row
    .col-md-12{'tooltip-placement' => "top", tooltip: t('tooltips.hotel.internet')}
      %legend
        %label=t("b1_admin.internet")
      .row
        .col-md-4
          %label{'for' => 'form_internet'}=t('hotels.internet')
          %select.form-control{'id' => 'form_internet', 'ng-model' => 'editedItem.internet', "ng-options" => "item.id as item.name for item in #{Hotel::INTERNET.each_pair.map{ |k,v| { name: t("b1_admin.internet_service.#{k.to_s.downcase}"), id: v } }.to_json}"}
        .col-md-4{'ng-show' => "editedItem.internet != #{Hotel::INTERNET[:NOT_EXIST]}"}
          %label{'for' => 'form_internet_type'}=t('hotels.internet_connect_type')
          %select.form-control{'id' => 'form_internet_type', 'ng-model' => 'editedItem.internet_type', "ng-options" => "item.id as item.name for item in #{Hotel::INTERNET_TYPE.each_pair.map{ |k,v| { name: t("b1_admin.internet_type.#{k.to_s.downcase}"), id: v } }.to_json}"}
        .col-md-4{'ng-show' => "editedItem.internet != #{Hotel::INTERNET[:NOT_EXIST]}"}
          %label{'for' => 'form_internet_place'}=t('hotels.internet_place')
          %select.form-control{'id' => 'form_internet_place', 'ng-model' => 'editedItem.internet_place', "ng-options" => "item.id as item.name for item in #{Hotel::INTERNET_PLACE.each_pair.map{ |k,v| { name: t("b1_admin.internet_places.#{k.to_s.downcase}"), id: v } }.to_json}"}
      .row
        .col-md-4{'ng-show' => "editedItem.internet == #{Hotel::INTERNET[:PAID]}"}
          %label{'for' => 'form_internet_cost_uah'}=t('hotels.internet_price')
          %input.form-control{'id' => 'internet_price', 'ng-model' => 'editedItem.internet_price'}

  .row
    .col-md-12{'tooltip-placement' => "top", tooltip: t('tooltips.hotel.parking')}
      %legend
        %label=t("b1_admin.parking")
      .row
        .col-md-3
          %label{'for' => 'form_internet'}=t('b1_admin.parking')
          %select.form-control{'id' => 'form_parking', 'ng-model' => 'editedItem.parking', "ng-options" => "item.id as item.name for item in #{Hotel::PARKING.each_pair.map{ |k,v| { name: t("b1_admin.parking_service.#{k.to_s.downcase}"), id: v } }.to_json}"}
        .col-md-3{'ng-show' => "editedItem.parking != #{Hotel::PARKING[:NOT_EXIST]}"}
          %label{'for' => 'form_parking_type'}=t('b1_admin.parking_type_title')
          %select.form-control{'id' => 'form_parking_type', 'ng-model' => 'editedItem.parking_type', "ng-options" => "item.id as item.name for item in #{Hotel::PARKING_TYPE.each_pair.map{ |k,v| { name: t("b1_admin.parking_type.#{k.to_s.downcase}"), id: v } }.to_json}"}
        .col-md-3{'ng-show' => "editedItem.parking != #{Hotel::PARKING[:NOT_EXIST]}"}
          %label{'for' => 'form_parking_place'}=t('b1_admin.parking_place_title')
          %select.form-control{'id' => 'form_parking_place', 'ng-model' => 'editedItem.parking_place', "ng-options" => "item.id as item.name for item in #{Hotel::PARKING_PLACE.each_pair.map{ |k,v| { name: t("b1_admin.parking_place.#{k.to_s.downcase}"), id: v } }.to_json}"}
        .col-md-3{'ng-show' => "editedItem.parking != #{Hotel::PARKING[:NOT_EXIST]}"}
          %label{'for' => 'form_parking_book'}=t('b1_admin.parking_prebook_title')
          %select.form-control{'id' => 'form_parking_book', 'ng-model' => 'editedItem.parking_prebook', "ng-options" => "item.id as item.name for item in #{Hotel::PARKING_PREBOOK.each_pair.map{ |k,v| { name: t("b1_admin.parking_prebook._#{k.to_s.downcase}"), id: v } }.to_json}"}
      .row
        .col-md-3{'ng-show' => "editedItem.parking == #{Hotel::PARKING[:PAID]}"}
          %label{'for' => 'parking_price'}=t('b1_admin.parking_price')
          %input.form-control{'id' => 'parking_price', 'ng-model' => 'editedItem.parking_price'}

  .row
    .col-md-12{'tooltip-placement' => "top", tooltip: t('tooltips.hotel.meal')}
      %legend
        %label=t("b1_admin.breakfast")
      .row
        .col-md-6
          %label{'for' => 'form_internet'}=t('b1_admin.breakfast')
          %select.form-control{'id' => 'form_parking', 'ng-model' => 'editedItem.breakfast', "ng-options" => "item.id as item.name for item in #{Hotel::BREAKFAST.each_pair.map{ |k,v| { name: t("b1_admin.breakfast_service.#{k.to_s.downcase}"), id: v } }.to_json}"}
        .col-md-6{'ng-show' => "editedItem.breakfast == #{Hotel::BREAKFAST[:ON_REQUEST]}"}
          %label{'for' => 'parking_price'}=t('b1_admin.breakfast_price')
          %input.form-control{'id' => 'breakfast_price', 'ng-model' => 'editedItem.breakfast_price'}
  .row
    .col-md-12{'tooltip-placement' => "top", tooltip: t('tooltips.hotel.children')}
      %legend
        %label=t('b1_admin.childrens')
      .row.form-group
        .col-md-3
          = label_tag :children_free_age_bool, t("b1_admin.free"), class:"col-sm-3 control-label"
          .col-sm-3
            %input.js-switch{"ui-switch" => "true", type: "checkbox",id:"children_free_age_bool", "ng-model"=>"editedItem.children_free_age_bool"}
        .col-md-3
          %label Возраст до:
          %input.form-control{'ng-model' => 'editedItem.children_free_age', 'type' => 'number', 'min' => '0', 'max' => '25'}
      .row.form-group
        .col-md-3
          = label_tag :children_pay_age_bool, t("b1_admin.paid"), class:"col-sm-3 control-label"
          .col-sm-3
            %input.js-switch{"ui-switch" => "true", type: "checkbox",id:"children_pay_age_bool", "ng-model"=>"editedItem.children_pay_age_bool"}
        .col-md-3
          %label Возраст до:
          %input.form-control{'ng-model' => 'editedItem.children_pay_age', 'type' => 'number', 'min' => '0', 'max' => '25'}
        .col-md-3
          %label Доплата за размещение:
          %input.form-control{'ng-model' => 'editedItem.children_pay_age_cost'}

  .row
    .col-md-12{'tooltip-placement' => "top", tooltip: t('tooltips.hotel.pets_description')}
      %legend
        %label=t("b1_admin.pets")
      .row
        .col-md-6
          %label{'for' => 'form_pets'}=t('b1_admin.pets')
          %select.form-control{'id' => 'form_pets', 'ng-model' => 'editedItem.pets', "ng-options" => "item.id as item.name for item in #{Hotel::PETS.each_pair.map{ |k,v| { name: t("b1_admin.pets_service._#{k.to_s.downcase}"), id: v } }.to_json}"}
        .col-md-6{'ng-show' => "editedItem.pets != #{Hotel::PETS[:NO]}"}
          %label{'for' => 'form_internet_type'}=t('b1_admin.pets_pay_title')
          %select.form-control{'id' => 'pets_pay', 'ng-model' => 'editedItem.pets_pay', "ng-options" => "item.id as item.name for item in #{Hotel::PETS_PAY.each_pair.map{ |k,v| { name: t("b1_admin.pets_pay.#{k.to_s.downcase}"), id: v } }.to_json}"}

  .row
    .col-md-12{'tooltip-placement' => "top", tooltip: t('tooltips.hotel.languages')}
      %legend
        %label=t("b1_admin.personal_language")
      .panel
        .panel-body
          .row
            - @languages_shows.in_groups_of((@languages_shows.count.to_f/2).ceil, false).each do |group|
              .col-md-6
                %ul
                  - group.each do |lang|
                    %li
                      %label=lang.name
                      .pull-right
                        %input.js-switch{"ui-switch" => "true", type: "checkbox",id:"perm_#{lang._id}", "ng-model"=>"editedItem.languages['#{lang._id}']"}
          .row
            .btn.btn-default{ng_click: 'show_others_langs = !show_others_langs'}
              = t('b1_admin.other_langs')
          .row{ng_show: 'show_others_langs'}
            %hr
            - @languages_not_shows.in_groups_of((@languages_not_shows.count.to_f/2).ceil, false).each do |group|
              .col-md-6
                %ul
                  - group.each do |lang|
                    %li
                      %label=lang.name
                      .pull-right
                        %input.js-switch{"ui-switch" => "true", type: "checkbox",id:"perm_#{lang._id}", "ng-model"=>"editedItem.languages['#{lang._id}']"}
